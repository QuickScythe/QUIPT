import io.papermc.paperweight.userdev.ReobfArtifactConfiguration

plugins {
    id 'java-library'
    id 'maven-publish'
    id("io.papermc.paperweight.userdev") version "$paperweight_version"
    id("xyz.jpenilla.run-paper") version "$run_paper_version"
//    id 'org.spongepowered.mixin' version '0.7.11-SNAPSHOT'
}

group = rootProject.group
version = "$plugin_version-$minecraft_version-$build_status-B$build_number"

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
}

dependencies {
    compileOnly 'org.json:json:20231013'
    compileOnly 'org.eclipse.jgit:org.eclipse.jgit:6.5.0.202303070854-r'
//    compileOnly "org.spongepowered:mixin:0.8.5"
//    annotationProcessor("org.spongepowered:mixin-processor:0.8.5")
    paperweight.paperDevBundle("${minecraft_version}-${paper_build}")

}

//apply plugin: "com.gradleup.shadow"

paperweight.reobfArtifactConfiguration = ReobfArtifactConfiguration.getMOJANG_PRODUCTION()
def targetJavaVersion = Integer.parseInt(java_version)
java {
    withSourcesJar()
    withJavadocJar()
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: "$plugin_version", minecraft_version: "$minecraft_version", author: "$author", name: "$rootProject.name"]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            name = 'localRepo'
            url = layout.buildDirectory.dir("repo")
        }
    }
}

runServer {
    pluginJars.from(configurations.runtimeClasspath)
//    classpath += configurations.runtimeClasspath
}
