plugins {
    id 'java-library'
    id 'maven-publish'
    id "com.modrinth.minotaur" version "2.+"

}


group = rootProject.group
version = "${plugin_version}-$minecraft_version-$build_status-B$build_number"

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
//    maven {
//        name = "quipt"
//        url = "https://repo.vanillaflux.com/repository/quipt/"
//    }
}


project(":paper") {
    processResources {
        def props = [version: "$plugin_version", minecraft_version: "$minecraft_version", author: "$author", name: "$rootProject.name"]
        inputs.properties props
        filteringCharset 'UTF-8'
        filesMatching('paper-plugin.yml') {
            expand props
        }
    }


}

//apply plugin: "com.gradleup.shadow"

def targetJavaVersion = Integer.parseInt(java_version)
java {
    withSourcesJar()
    withJavadocJar()
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}


publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            name = 'localRepo'
            url = layout.buildDirectory.dir("repo")
        }
    }
}


modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    def log = System.getenv("CHANGELOG")
    if (log != null) changelog = log else changelog = file("changelog.md").text
    projectId = "${modrinth_id}"
    versionNumber = "${plugin_version}"
    versionType = "${build_status}"
    uploadFile = jar
    loaders = ["paper"]
    syncBodyFrom = file("readme.md").text
//    changelog = file("changelog.md").text
    dependencies {}
}

tasks.modrinth.dependsOn(tasks.modrinthSyncBody)